---
# Commonly Changed Variables:
#
# Name of project application
project_name: 'data-repo'
# The project branch of the application to be used
project_git_identifier: 'master'
# The RAILS_ENV in which the application will be installed and run
project_app_env: 'development'
# Rails "secret_key_base:" setting in config/secrets.yml.
# This MUST be set here if {{ project_app_env }} is set to "production"
# it can be generated using `openssl rand -hex 64`
project_secret_key_base: ''

# Multi-Role Project Variables:
#
# User under which project application will be installed
project_user: 'hydra'
# The home directory of {{ project_user }}
project_user_home: '/var/local/{{ project_user }}'
# Name of group to which {{ project_user }} belongs
project_group: '{{ project_user }}'

# Graylog logging
#
# If the project_app_env is "production" then you may want to enable Graylog
# logging.  Here are applicable settings:
#
# Host running Graylog server
graylog_host: 127.0.0.1
# Port on which Graylog server is listening
graylog_port: 12201
# Protocol used by GELF input: 'udp' or 'tcp'
graylog_protocol: udp
# Chunking size appropriate for network between client and Graylog server: 'LAN' or 'WAN'
graylog_network_locality: WAN
# The facility identifying the client application
graylog_facility: "{{ project_name }}"
# Rails::Application::Configuration.log_level: "debug", "info", "warn", "error", etc.
graylog_verbosity: "info"

# Project Secrets:
#
# The GeoNames user the application will use (if any)
project_geonames_user: ''
# EZID shoulder
project_ezid_shoulder: 'doi:10.5072/FK2'
# EZID API username
project_ezid_user: 'apitest'
# EZID API password
project_ezid_password: 'apitest'
# ORCID API application ID
project_orcid_app_id: '0000-0000-0000-0000'
# ORCID API application secret
project_orcid_app_secret: 'XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX'
# Which ORCID service to use: sandbox or production
project_orcid_service: 'sandbox'
# Application database name for Rails config/database.yml "database:" setting
project_db_name: 'datarepo'
# Application database user for Rails config/database.yml "username:" setting
project_db_user: '{{ project_user }}'
# Application database name for Rails config/database.yml "password:" setting
project_db_password: 'changeme'
# Base URL of Solr endpoint
project_solr_url: 'http://localhost:8983/solr'
# Name of Solr core used by application
project_solr_core: '{{ project_app_env }}'
# Hostname at which Redis server can be contacted
project_redis_host: 'localhost'
# Port on which Redis server listens
project_redis_port: '6379'
# Base URL of CAS server endpoint
project_cas_url: 'https://login-dev.middleware.vt.edu/profile/cas'

# Fedora 4 settings
#
# Base URL of Fedora 4 endpoint
project_fedora_url: 'http://127.0.0.1:8080/fedora/rest'
# Servlet container username used to access Fedora 4
project_fedora_user: 'fedoraAdmin'
# Servlet container password used to access Fedora 4
project_fedora_password: 'fedoraAdmin'
# Base path of Fedora 4 repository (e.g., "/prod", "/dev", "/test")
project_fedora_base_path: '/prod'
# Java VM options
project_fedora_java_vm_opts: '-Xms512m -Xmx1024m -XX:NewSize=256m -XX:MaxNewSize=256m -XX:MetaspaceSize=256m -XX:MaxMetaspaceSize=256m -XX:+DisableExplicitGC'

# Multi-Role Solr Variables:
#
# The username under which a local Solr server runs
solr_user: 'solr'
# The group name of the local Solr server
solr_group: '{{ solr_user }}'
# The directory in which Solr data lives (e.g., Solr cores, logs)
solr_data_dir: '/var/solr/data'

# Multi-Role Database Variables:
#
# The PostgreSQL user used to create the application PostgreSQL database
database_user: 'postgres'
database_group: 'postgres'
database_password: 'postgres'

# Miscellaneous:
#
# URL from which project application code can be cloned via Git
project_git_url: 'https://github.com/VTUL/{{ project_name }}.git'
# An SSH deploy key to be used when cloning the project application.
# When using a deploy key, {{ project_git_url }} should be an SSH-style Git URL
project_deploy_key: ''
# The directory in which the application will reside
project_app_root: '{{project_user_home }}/{{ project_name }}'
# Max upload size
#project_max_upload_size: "200m"
# Username for chroot SFTP user
sftp_user: "upload"
# Username that should be the primary owner of the chroot SFTP directory area
sftp_chroot_owner: "{{ project_user }}"
# Group name that should be the group owner of the chroot SFTP directory area
sftp_chroot_group: "{{ sftp_user }}"
# Home directory of {{ sftp_user }}.  This is normally separate from
# {{ sftp_upload_root }} and primarily serves as a place to put authorized_keys
sftp_home_dir: "/home/{{ sftp_user }}"
# The root directory of the chroot SFTP area.
# Note: The root user must own the {{ sftp_upload_root }} directory and all
# parent directories in the path for StrictModes to be satisfied.
sftp_upload_root: "/opt/sftp/geodata"
#
# Variables related to direct Ansible invocation:
# ansible_user: 'superuser'

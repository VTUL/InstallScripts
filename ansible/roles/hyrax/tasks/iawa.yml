---
- block:
  - name: create default hyrax collection type
    command: bundle exec rails hyrax:default_collection_types:create
    args:
      chdir: '{{ project_app_root }}'

  - name: create roles
    command: bundle exec rails iawa:add_roles
    args:
      chdir: '{{ project_app_root }}'
  become: yes
  become_user: '{{ project_runner }}'
  environment:
    RAILS_ENV: '{{ project_app_env }}'

- block:
  - name: copy list of users
    copy:
      src: "{{ local_files_dir }}/user_list.txt"
      dest: '{{ project_app_root }}/user_list.txt'
    ignore_errors: False
    register: copy_user_list

  - name: add users
    command: bundle exec rails iawa:populate_users
    args:
      chdir: '{{ project_app_root }}'
    when: copy_user_list is successful

  - name: copy list of admins
    copy:
      src: "{{ local_files_dir }}/admin_list.txt"
      dest: '{{ project_app_root }}/admin_list.txt'
    ignore_errors: False
    register: copy_admin_list

  - name: copy carousel image package
    copy:
      src: "{{ local_files_dir }}/{{ carousel_pkg }}"
      dest: '{{ project_app_root }}/{{ carousel_pkg }}'
    ignore_errors: True
    register: copy_carousel_image_package

  - name: ensure carousel image directory exists
    file:
      path: '{{ project_app_root }}/app/assets/images/vtul/carousel'
      owner: '{{ project_owner }}'
      group: '{{ project_runner_group }}'
      mode: "u=rwX,g=rX,o="
      state: directory

  - name: untar carousel image asset dir
    unarchive:
      src: '{{ project_app_root }}/{{ carousel_pkg }}'
      dest: '{{ project_app_root }}/app/assets/images/vtul/carousel/'
      owner: '{{ project_owner }}'
      group: '{{ project_runner_group }}'
      mode: "u=rwX,g=rX,o="
      remote_src: yes
    ignore_errors: True
    when: copy_carousel_image_package is successful
    notify:
      - precompile assets
  become: yes
  become_user: '{{ project_owner }}'
  environment:
    RAILS_ENV: '{{ project_app_env }}'

- block:
  - name: upgrade users
    command: bundle exec rails iawa:upgrade_users
    args:
      chdir: '{{ project_app_root }}'
    when: copy_admin_list is successful

  - name: add initial controlled vocabularies
    command: bundle exec rails iawa:add_controlled_vocabs
    args:
      chdir: '{{ project_app_root }}'
  become: yes
  become_user: '{{ project_runner }}'
  environment:
    RAILS_ENV: '{{ project_app_env }}'

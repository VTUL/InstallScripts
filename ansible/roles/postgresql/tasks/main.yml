---
- name: get os-specific settings
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution|lower }}-{{ansible_distribution_version }}.yml"
        - "{{ ansible_distribution|lower }}-{{ansible_distribution_major_version }}.yml"
        - "{{ ansible_distribution|lower }}.yml"
        - "{{ ansible_os_family|lower }}.yml"
        - defaults.yml
      paths:
        - "{{ role_path }}/vars"

- name: add postgresql key
  apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    id: B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8
    state: present

- name: add postgresql repository
  apt_repository:
    repo: 'deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main'
    update_cache: yes
    state: present

- name: install postgresql server packages
  apt:
    name: '{{ item }}'
    state: present
    cache_valid_time: '{{ apt_cache_timeout }}'
    update_cache: yes
  with_items:
    - postgresql-{{ postgres_version }}
  when: postgresql_is_local

- name: install postgresql client packages
  apt:
    name: '{{ item }}'
    state: present
    cache_valid_time: '{{ apt_cache_timeout }}'
    update_cache: yes
  with_items: "{{ postgresql_client_packages }}"

- name: install access rules
  copy:
    src: pg_hba.conf
    dest: /etc/postgresql/{{ postgres_version }}/main/pg_hba.conf
    group: '{{ database_group }}'
    owner: '{{ database_user }}'
  register: configure_postgres
  when: postgresql_is_local

- name: ensure postgres starts on boot
  service:
    name: postgresql
    enabled: yes
  when: postgresql_is_local

- name: restart postgres server
  service:
    name: postgresql
    state: restarted
  when: configure_postgres.changed
